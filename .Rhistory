scale_fill_viridis_b() +
theme(axis.text.x=element_text(angle=90))
melted_corr <- na.omit(melted_corr)
ggplot(melted_corr, aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
ggtitle("Correlation Matrix of Numeric Variables") +
scale_fill_viridis_b() +
theme(axis.text.x=element_text(angle=90))
ggplot(melted_corr, aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
ggtitle("Correlation Matrix of Numeric Variables") +
scale_fill_viridis_b() +
theme(axis.text.x=element_text(angle=90))
View(melted_corr)
View(melted_corr)
melted_corr <- melt(na.omit(corr_matrix))
ggplot(melted_corr, aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
ggtitle("Correlation Matrix of Numeric Variables") +
scale_fill_viridis_b() +
theme(axis.text.x=element_text(angle=90))
corr_matrix <- round(cor(data[, numeric_cols]),3)
melted_corr <- melt(corr_matrix)
ggplot(melted_corr, aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
ggtitle("Correlation Matrix of Numeric Variables") +
scale_fill_viridis_b() +
theme(axis.text.x=element_text(angle=90))
ggplot(melted_corr, aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
ggtitle("Correlation Matrix of Numeric Variables") +
scale_fill_viridis_c() +
theme(axis.text.x=element_text(angle=90))
ggplot(melted_corr, aes(x=Var1, y=Var2, fill=value, label=value)) +
geom_tile() +
ggtitle("Correlation Matrix of Numeric Variables") +
scale_fill_viridis_c() +
theme(axis.text.x=element_text(angle=90))
ggplot(melted_corr, aes(x=Var1, y=Var2, fill=value, label=value)) +
geom_tile() +
deom_text()
ggplot(melted_corr, aes(x=Var1, y=Var2, fill=value, label=value)) +
geom_tile() +
geom_text()
corr_matrix <- round(cor(data[, numeric_cols]),2)
melted_corr <- melt(corr_matrix)
ggplot(melted_corr, aes(x=Var1, y=Var2, fill=value, label=value)) +
geom_tile() +
geom_text()
ggtitle("Correlation Matrix of Numeric Variables") +
scale_fill_viridis_c() +
theme(axis.text.x=element_text(angle=90))
ggplot(melted_corr, aes(x=Var1, y=Var2, fill=value, label=value)) +
geom_tile() +
geom_text(color="white")
ggplot(melted_corr, aes(x=Var1, y=Var2, fill=value, label=value)) +
geom_tile() +
geom_text(color="white") +
ggtitle("Correlation Matrix of Numeric Variables") +
scale_fill_viridis_c() +
theme(axis.text.x=element_text(angle=90))
?geom_text
ggplot(melted_corr, aes(x=Var1, y=Var2, fill=value, label=value)) +
geom_tile() +
geom_text(color="white", size=5) +
ggtitle("Correlation Matrix of Numeric Variables") +
scale_fill_viridis_c() +
theme(axis.text.x=element_text(angle=90))
ggplot(melted_corr, aes(x=Var1, y=Var2, fill=value, label=value)) +
geom_tile() +
geom_text(color="white", size=2) +
ggtitle("Correlation Matrix of Numeric Variables") +
scale_fill_viridis_c() +
theme(axis.text.x=element_text(angle=90))
corr_matrix <- round(cor(na.omit(data[, numeric_cols])),2)
corr_matrix <-
melted_corr <- melt(corr_matrix)
ggplot(melted_corr, aes(x=Var1, y=Var2, fill=value, label=value)) +
geom_tile() +
geom_text(color="white", size=2) +
ggtitle("Correlation Matrix of Numeric Variables") +
scale_fill_viridis_c() +
theme(axis.text.x=element_text(angle=90))
ggplot(melted_corr, aes(x=Var1, y=Var2, fill=value, label=value)) +
geom_tile() +
geom_text(color="white", size=2) +
ggtitle("Correlation Matrix of Numeric Variables") +
scale_fill_viridis_a() +
theme(axis.text.x=element_text(angle=90))
ggplot(melted_corr, aes(x=Var1, y=Var2, fill=value, label=value)) +
geom_tile() +
geom_text(color="white", size=3) +
ggtitle("Correlation Matrix of Numeric Variables") +
scale_fill_viridis_c() +
theme(axis.text.x=element_text(angle=90))
ggplot(melted_corr, aes(x=Var1, y=Var2, fill=value, label=value)) +
geom_tile() +
geom_text(color="white", size=3) +
ggtitle("Correlation Matrix of Numeric Variables") +
scale_fill_viridis_c() +
theme(axis.text.x=element_text(angle=90))
ggsave("./images/CorrelationMatrix.png")
# Distribution of price sensitivity by Age
ggplot(data, aes(x=Age, color=Price_Sensitivity)) +
geom_freqpoly()
# Distribution of price sensitivity by Age
ggplot(data, aes(x=Age, color=Price_Sensitivity)) +
geom_freqpoly(binwidth=1)
# Distribution of price sensitivity by Age
ggplot(data, aes(x=Age, color=as.factor(Price_Sensitivity))) +
geom_freqpoly(binwidth=1)
# Distribution of price sensitivity by Age
ggplot(data, aes(x=Age, color=as.factor(Price_Sensitivity))) +
geom_freqpoly(binwidth=1) +
scale_y_continuous()
# Distribution of price sensitivity by Age
ggplot(data, aes(x=Age, color=as.factor(Price_Sensitivity))) +
geom_freqpoly(binwidth=1, aes(y=stat(count) /sum(count))) +
scale_y_continuous()
# Distribution of price sensitivity by Age
ggplot(data, aes(x=Age, color=as.factor(Price_Sensitivity))) +
geom_freqpoly(binwidth=1, aes(y=stat(count) /sum(count))) +
scale_y_continuous() +
labs(color="Sensitivity")
# Distribution of price sensitivity by Age
ggplot(data, aes(x=Age, color=as.factor(Price_Sensitivity))) +
geom_freqpoly(binwidth=1, aes(y=stat(count) /sum(count))) +
scale_y_continuous() +
labs(color="Sensitivity") +
ylab("Relative Frequency")
# Distribution of price sensitivity by Age
ggplot(data, aes(x=Age, color=as.factor(Price_Sensitivity))) +
geom_freqpoly(binwidth=1, aes(y=stat(count) /sum(count))) +
scale_y_continuous() +
labs(color="Sensitivity") +
ylab("Relative Frequency") +
ylim(-.01, .02)
# Distribution of price sensitivity by Age
ggplot(data, aes(x=Age, color=as.factor(Price_Sensitivity))) +
geom_freqpoly(binwidth=1, aes(y=stat(count) /sum(count))) +
scale_y_continuous() +
labs(color="Sensitivity") +
ylab("Relative Frequency") +
ylim(-.005, .02)
# Distribution of price sensitivity by Age
ggplot(data, aes(x=Age, color=as.factor(Price_Sensitivity))) +
geom_freqpoly(binwidth=1, aes(y=stat(count) /sum(count))) +
scale_y_continuous() +
labs(color="Sensitivity") +
ylab("Relative Frequency") +
ylim(-.0025, .02)
# Distribution of price sensitivity by Age
ggplot(data, aes(x=Age, color=as.factor(Price_Sensitivity))) +
geom_freqpoly(binwidth=1, aes(y=stat(count) /sum(count))) +
scale_y_continuous() +
labs(color="Sensitivity") +
ylab("Relative Frequency") +
ylim(-.0005, .02)
ggplot(data, aes(x=Gender, color=as.factor(Price_Sensitivity))) +
geom_freqpoly(binwidth=1, aes(y=stat(count) /sum(count))) +
scale_y_continuous() +
labs(color="Sensitivity") +
ylab("Relative Frequency") +
ylim(-.0005, .02) +
ggtitle("Relative frequency of Price Sensitivty by Gender")
ggplot(data, aes(x=Gender, color=as.factor(Price_Sensitivity))) +
geom_freqpoly(aes(y=stat(count) /sum(count))) +
scale_y_continuous() +
labs(color="Sensitivity") +
ylab("Relative Frequency") +
ylim(-.0005, .02) +
ggtitle("Relative frequency of Price Sensitivty by Gender")
ggplot(data, aes(x=Gender, fill=as.factor(Price_Sensitivity))) +
geom_bar(aes(y=stat(count) /sum(count))) +
scale_y_continuous() +
labs(color="Sensitivity") +
ylab("Relative Frequency") +
ylim(-.0005, .02) +
ggtitle("Relative frequency of Price Sensitivty by Gender")
ggplot(data, aes(x=Gender, fill=as.factor(Price_Sensitivity))) +
geom_col(aes(y=stat(count) /sum(count))) +
scale_y_continuous() +
labs(color="Sensitivity") +
ylab("Relative Frequency") +
ylim(-.0005, .02) +
ggtitle("Relative frequency of Price Sensitivty by Gender")
ggplot(data, aes(x=Gender, fill=as.factor(Price_Sensitivity))) +
geom_col() +
scale_y_continuous() +
labs(color="Sensitivity") +
ylab("Relative Frequency") +
ylim(-.0005, .02) +
ggtitle("Relative frequency of Price Sensitivty by Gender")
ggplot(data, aes(x=Gender, fill=as.factor(Price_Sensitivity))) +
geom_bar() +
labs(color="Sensitivity") +
ylim(-.0005, .02) +
ggtitle("Relative frequency of Price Sensitivty by Gender")
ggplot(data, aes(x=Gender, fill=as.factor(Price_Sensitivity))) +
geom_bar() +
labs(color="Sensitivity") +
ggtitle("Relative frequency of Price Sensitivty by Gender")
ggplot(data, aes(x=Gender, fill=as.factor(Price_Sensitivity))) +
geom_bar() +
labs(color="Sensitivity") +
ggtitle("Count of Price Sensitivty by Gender")
ggsave("./images/PriceSensitiviesGender.png")
# Distribution of price sensitivity by Age
ggplot(data, aes(x=Age, color=as.factor(Price_Sensitivity))) +
geom_freqpoly(binwidth=1, aes(y=stat(count) /sum(count))) +
scale_y_continuous() +
labs(color="Sensitivity") +
ylab("Relative Frequency") +
ylim(-.0005, .02) +
ggtitle("Relative frequency of Price Sensitivty by Age")
ggsave("./images/RelFreqPriceSensitivityByAge.png")
ggplot(data, aes(x=Gender, fill=as.factor(Price_Sensitivity))) +
geom_bar() +
labs(color="Sensitivity") +
ggtitle("Count of Price Sensitivty by Gender") +
labs(fill="Sensitivity")
ggsave("./images/PriceSensitiviesGender.png")
# Create columns for Departure Delay and Arrival Delay as a percent of Flight Time
data %>%
mutate(DepDelay% = Departure_Delay_in_Minutes / Flight_time_in_minutes)
# Create columns for Departure Delay and Arrival Delay as a percent of Flight Time
data %>%
mutate(DepDelay% = (Departure_Delay_in_Minutes / Flight_time_in_minutes))
# Create columns for Departure Delay and Arrival Delay as a percent of Flight Time
data %>%
mutate(DepDelayRatio =(Departure_Delay_in_Minutes / Flight_time_in_minutes))
# Create columns for Departure Delay and Arrival Delay as a percent of Flight Time
data %>%
mutate(DepDelayRatio =(Departure_Delay_in_Minutes / Flight_time_in_minutes)) %>%
select(DepDelayRatio)
# Create columns for Departure Delay and Arrival Delay as a percent of Flight Time
data %>%
mutate(DepDelayRatio =(Departure_Delay_in_Minutes / Flight_time_in_minutes),
ArrDelayRatio =(Arrival_Delay_in_Minutes / Flight_time_in_minutes)) %>%
select(DepDelayRatio,ArrDelayRatio)
# Create columns for Departure Delay and Arrival Delay as a percent of Flight Time
data <- data %>%
mutate(DepDelayRatio =(Departure_Delay_in_Minutes / Flight_time_in_minutes),
ArrDelayRatio =(Arrival_Delay_in_Minutes / Flight_time_in_minutes))
# ----------------------------------------------------------------------------------
# EDA - Summaries
# ----------------------------------------------------------------------------------
data %>%
groupby(Destination_City) %>%
summarise(n())
# ----------------------------------------------------------------------------------
# EDA - Summaries
# ----------------------------------------------------------------------------------
data %>%
group_by(Destination_City) %>%
summarise(n())
# ----------------------------------------------------------------------------------
# EDA - Summaries
# ----------------------------------------------------------------------------------
data %>%
group_by(Destination_City) %>%
summarise(n()) %>%
arrange(desc(n()))
# ----------------------------------------------------------------------------------
# EDA - Summaries
# ----------------------------------------------------------------------------------
data %>%
group_by(Destination_City) %>%
summarise(count=n()) %>%
arrange(desc(count))
# ----------------------------------------------------------------------------------
# EDA - Summaries
# ----------------------------------------------------------------------------------
dest_group <- data %>%
group_by(Destination_City) %>%
summarise(count=n()) %>%
arrange(desc(count))
tail(dest_group, 10)
route_group <- data %>%
group_by(Origin_City, Origin_State) %>%
summarise(count=n(),
avg_delay=mean(Departure_Delay_in_Minutes),
avg_flight_time=mean(Flight_time_in_minutes),
num_cancellations=sum(ifelse(Flight_cancelled == "Yes", 1, 0))
)
?rename
# fix the origin city misspell
rename(data, Orgin_City=Origin_City)
# fix the origin city misspell
rename(data, Origin_City=Orgin_City)
# fix the origin city misspell
data <- rename(data, Origin_City=Orgin_City)
route_group <- data %>%
group_by(Origin_City, Origin_State) %>%
summarise(count=n(),
avg_delay=mean(Departure_Delay_in_Minutes),
avg_flight_time=mean(Flight_time_in_minutes),
num_cancellations=sum(ifelse(Flight_cancelled == "Yes", 1, 0))
)
route_group
route_group <- data %>%
group_by(Origin_City, Origin_State) %>%
summarise(count=n(),
avg_delay=mean(Departure_Delay_in_Minutes, na.rm=TRUE),
avg_flight_time=mean(Flight_time_in_minutes, na.rm=TRUE),
num_cancellations=sum(ifelse(Flight_cancelled == "Yes", 1, 0))
)
route_group
route_group <- data %>%
group_by(Origin_City, Destination_City) %>%
summarise(count=n(),
avg_delay=mean(Departure_Delay_in_Minutes, na.rm=TRUE),
avg_flight_time=mean(Flight_time_in_minutes, na.rm=TRUE),
num_cancellations=sum(ifelse(Flight_cancelled == "Yes", 1, 0))
)
route_group
dest_group <- dest_group %>%
mutate(rel_freq= count / sum(count))
tail(dest_group, 10)
?desc
route_group %>%
arrange(desc(num_cancellations))
sum(route_group$num_cancellations)
route_group %>%
mutate(cancellation_freq= num_cancellations/count)
route_group %>%
arrange(desc(num_cancellations))
route_group <- route_group %>%
mutate(cancellation_freq= num_cancellations/count)
route_group %>%
arrange(desc(num_cancellations))
route_group %>%
arrange(desc(cancellation_freq))
route_group %>%
filter(count > 10) %>%
arrange(desc(cancellation_freq))
airline-group <- data %>%
group_by(Airline_Name) %>%
summarise(count=n(),
avg_delay=mean(Departure_Delay_in_Minutes, na.rm=TRUE),
avg_flight_time=mean(Flight_time_in_minutes, na.rm=TRUE),
num_cancellations=sum(ifelse(Flight_cancelled == "Yes", 1, 0))
)
airline_group <- data %>%
group_by(Airline_Name) %>%
summarise(count=n(),
avg_delay=mean(Departure_Delay_in_Minutes, na.rm=TRUE),
avg_flight_time=mean(Flight_time_in_minutes, na.rm=TRUE),
num_cancellations=sum(ifelse(Flight_cancelled == "Yes", 1, 0))
)
airline_group <- data %>%
group_by(Airline_Name) %>%
summarise(count=n(),
avg_delay=mean(Departure_Delay_in_Minutes, na.rm=TRUE),
avg_flight_time=mean(Flight_time_in_minutes, na.rm=TRUE),
num_cancellations=sum(ifelse(Flight_cancelled == "Yes", 1, 0)),
cancellation_freq= num_cancellations/count
)
airline_group
# group by airline name and look at average delay, flight, and cancellations
airline_group <- data %>%
group_by(Airline_Name) %>%
summarise(count=n(),
avg_delay=mean(Departure_Delay_in_Minutes, na.rm=TRUE),
avg_flight_time=mean(Flight_time_in_minutes, na.rm=TRUE),
num_cancellations=mean(ifelse(Flight_cancelled == "Yes", 1, 0)),
cancellation_freq= num_cancellations/count
)
airline_group
# group by airline name and look at average delay, flight, and cancellations
airline_group <- data %>%
group_by(Airline_Name) %>%
summarise(count=n(),
avg_delay=mean(Departure_Delay_in_Minutes, na.rm=TRUE),
avg_flight_time=mean(Flight_time_in_minutes, na.rm=TRUE),
num_cancellations=sum(ifelse(Flight_cancelled == "Yes", 1, 0)),
cancellation_freq= num_cancellations/count
)
airline_group
# ----------------------------------------------------------------------------------
# Data Transformation
# ----------------------------------------------------------------------------------
ggplot(data, aes(x=No._of_other_Loyalty_Cards)) +
geom_bar()
data %>%
group_by(No._of_other_Loyalty_Cards) %>%
summarise(count=n())
# plot the means in a bar chart
ggplot(airline_mean, aes(x=Airline_Name, y=mean_satisfaction, fill=mean_satisfaction, label=mean_satisfaction)) +
geom_col() +
geom_text(nudge_y=.3) +
theme(axis.text.x = element_text(angle=90), legend.position = "None") +
ylim(0, 5) +
ggtitle("Average Satisfaction Score by Airline")
# plot the means in a bar chart
ggplot(airline_mean, aes(x=Airline_Name, y=mean_satisfaction, fill=mean_satisfaction, label=mean_satisfaction)) +
geom_col() +
geom_text(nudge_y=.3) +
theme(axis.text.x = element_text(angle=90), legend.position = "None") +
ylim(0, 5) +
ggtitle("Average Satisfaction Score by Airline") +
coord_flip()
# plot the means in a bar chart
ggplot(airline_mean, aes(x=Airline_Name, y=mean_satisfaction, fill=mean_satisfaction, label=mean_satisfaction)) +
geom_col() +
geom_text(nudge_y=.3) +
theme(axis.text.x = element_text(angle=90), legend.position = "None") +
ylim(0, 4.5) +
ggtitle("Average Satisfaction Score by Airline") +
coord_flip()
# plot the means in a bar chart
ggplot(airline_mean, aes(x=Airline_Name, y=mean_satisfaction, fill=mean_satisfaction, label=mean_satisfaction)) +
geom_col() +
geom_text(nudge_y=.3) +
theme(axis.text.x = element_text(angle=90), legend.position = "None") +
ylim(0, 4) +
ggtitle("Average Satisfaction Score by Airline") +
coord_flip()
ggplot(airline_mean, aes(x=Airline_Name, y=mean_satisfaction, fill=mean_satisfaction, label=mean_satisfaction)) +
geom_col() +
geom_text(nudge_y=.3) +
theme(axis.text.x = element_text(angle=90), legend.position = "None") +
ylim(0, 4) +
ggtitle("Average Satisfaction Score by Airline") +
coord_flip()
ggsave("./images/SatisfactionByAirline.png")
# plot the means in a bar chart
ggplot(airline_mean, aes(x=Airline_Name, y=mean_satisfaction, fill=mean_satisfaction, label=mean_satisfaction)) +
geom_col() +
geom_text(nudge_y=.3) +
ylim(0, 4) +
ggtitle("Average Satisfaction Score by Airline") +
coord_flip()
# plot the means in a bar chart
ggplot(airline_mean, aes(x=Airline_Name, y=mean_satisfaction, fill=mean_satisfaction, label=mean_satisfaction)) +
geom_col() +
geom_text(nudge_y=.3) +
theme(legend.position = "None") +
ylim(0, 4) +
ggtitle("Average Satisfaction Score by Airline") +
coord_flip()
ggsave("./images/SatisfactionByAirline.png")
ggplot(data, aes(x=Type_of_Travel, y=Satisfaction)) +
geom_boxplot()
write.csv(data, file='./data/cleaned_data.csv')
ggplot(data, aes(x=Age)) +
geom_histogram(binwidth=4, fill="darkred", color="white") +
ggtitle("Distribution of Passenger Ages")
ggsave("./images/AgeDistribution.png")
data %>%
transmutate(cut(No._of_other_Loyalty_Cards, breaks=c(0, 1, 3, 6, 12)))
data %>%
transmutate(cat=cut(No._of_other_Loyalty_Cards, breaks=c(0, 1, 3, 6, 12))) %>%
select(cat)
data %>%
mutate(cat=cut(No._of_other_Loyalty_Cards, breaks=c(0, 1, 3, 6, 12))) %>%
select(cat)
data %>%
mutate(cat=cut(No._of_other_Loyalty_Cards, breaks=c(0, 1, 3, 6, 12)))
data %>%
select(No._of_other_Loyalty_Cards)
data %>%
select(No._of_other_Loyalty_Cards) %>%
mutate(cat=cut(No._of_other_Loyalty_Cards, breaks=c(-Inf, 1, 3, 6, 12))) %>%
select(cat)
data %>%
select(No._of_other_Loyalty_Cards) %>%
mutate(cat=cut(No._of_other_Loyalty_Cards, breaks=c(-Inf, 1, 3, 6, 12))) %>%
select(cat) %>%
distinct(cat)
data %>%
select(No._of_other_Loyalty_Cards) %>%
mutate(cat=cut(No._of_other_Loyalty_Cards, breaks=c(-Inf, 0, 3, 6, 12), labels=c("0"))) %>%
select(cat) %>%
data %>%
select(No._of_other_Loyalty_Cards) %>%
mutate(cat=cut(No._of_other_Loyalty_Cards, breaks=c(-Inf, 0, 3, 6, 12), labels=c("0"))) %>%
select(cat) %>%
distinct(cat)
data %>%
select(No._of_other_Loyalty_Cards) %>%
mutate(cat=cut(No._of_other_Loyalty_Cards, breaks=c(-Inf, 0, 3, 6, 12), labels=c("None", "Low", "Medium", "High"))) %>%
select(cat) %>%
distinct(cat)
data %>%
select(No._of_other_Loyalty_Cards) %>%
mutate(cat=cut(No._of_other_Loyalty_Cards, breaks=c(-Inf, 0, 3, 6, 12), labels=c("None", "Low", "Medium", "High"))) %>%
select(cat) %>%
data %>%
select(No._of_other_Loyalty_Cards) %>%
mutate(cat=cut(No._of_other_Loyalty_Cards, breaks=c(-Inf, 0, 3, 6, 12), labels=c("None", "Low", "Medium", "High"))) %>%
select(cat) %>%
distinct(cat)
data %>%
select(No._of_other_Loyalty_Cards) %>%
mutate(cat=cut(No._of_other_Loyalty_Cards, breaks=c(-Inf, 0, 3, 6, 12), labels=c("None", "Low", "Medium", "High"))) %>%
select(cat)
data %>%
select(No._of_other_Loyalty_Cards) %>%
mutate(cat_loyalty_cards=cut(No._of_other_Loyalty_Cards,
breaks=c(-Inf, 0, 3, 6, 12),
labels=c("None", "Low", "Medium", "High")))
data %>%
mutate(cat_loyalty_cards=cut(No._of_other_Loyalty_Cards,
breaks=c(-Inf, 0, 3, 6, 12),
labels=c("None", "Low", "Medium", "High")))
# Create categories for the Numbe of loyalty cards a customer has
data <- data %>%
mutate(cat_loyalty_cards=cut(No._of_other_Loyalty_Cards,
breaks=c(-Inf, 0, 3, 6, 12),
labels=c("None", "Low", "Medium", "High")))
tabulate(data$No._of_other_Loyalty_Cards)
